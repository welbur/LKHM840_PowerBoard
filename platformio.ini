; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;src_dir = ./    ;Src/
;include_dir = Inc
;lib_dir = Drivers

[env:genericSTM32F412RE]
platform = ststm32
board = genericSTM32F412RE
framework = stm32cube
upload_protocol = dfu
; select linker file generated by CubeMX
board_build.ldscript = STM32F412RETx_FLASH.ld
; make build system use our HAL config file
board_build.stm32cube.custom_config_header = yes
; force inclusion of lib/FreeRTOS
lib_deps = FreeRTOS

build_flags = -D DEVBoardYD     ;DEVBoard
    -D D_I_Board
    ;-D D_Q_Board
    ;-D MENU_Board
    ;-D RS485_Board
    -D RTOS_enable
    ;-D HSI_VALUE=16000000UL
    -mfpu=fpv4-sp-d16
    -mfloat-abi=softfp  ;hard
    -D STM32F4xx
    
    -I lib/FreeRTOS/Source/include
    -I lib/FreeRTOS/Source/CMSIS_RTOS_V2
    -I lib/FreeRTOS/Source/portable/GCC/ARM_CM4F
    -I include
    ;-I Drivers/LKIOCtrlBox_MSP

;    -I Inc
;    -I Drivers/CMSIS/Include/
;    -I Drivers/CMSIS/Device/ST/STM32F4xx/Include
;    -I Drivers/STM32F4xx_HAL_Driver/Inc/
;    -I Drivers/STM32F4xx_HAL_Driver/Inc/Legacy
    
    ;-I Drivers/MODBUS_LIB 
; link FreeRTOS as objectf files, not as
; archives. otherwise weak ISR functions
; don't get linked properly!
lib_archive = no
; fix for RAM size / initial SP.
; see https://community.platformio.org/t/arm-versus-thumb/23540/
; actually **not** needed because we have selected a fixed linkerfile!!
;board_upload.maximum_ram_size = 131072

platform_packages = toolchain-gccarmnoneeabi@1.100301.220327